// question no 1.
#include <stdio.h>


void reverse(int A[], int low, int high);

int main()
{
    int n, m, i;
    printf("Enter the size of the array:");
    scanf("%d", &n);
    int A[n];
    printf("Enter the array elements:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &A[i]);
    }


    printf("Enter the number of rotations: ");
    scanf("%d", &m);

    reverse(A, 0, m-1);
    reverse(A, m, n-1);
    reverse(A, 0, n-1);

    printf("Rotated array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", A[i]);
    }
    printf("\n");

    return 0;
}

void reverse(int A[], int low, int high)
{
    while (low < high) {
        int temp = A[low];
        A[low] = A[high];
        A[high] = temp;
        low++;
        high--;
    }
}

// question no.2
#include <stdio.h>
#include <stdlib.h>

int main() {
    int road_length, num_areas, trees_to_move, i, j;

 
    printf("Enter the length of the road: ");
    scanf("%d", &road_length);
    printf("Enter how many areas are needed for new facilities: ");
    scanf("%d", &num_areas);

    int *trees = (int *) calloc(road_length+1, sizeof(int));


    for (i = 0; i <= road_length; i += 2) {
        trees[i] = 1;
    }

    for (i = 0; i < num_areas; i++) {
        int start, end;
        printf("area#%d starting point & ending point: ", i+1);
        scanf("%d %d", &start, &end);

        for (j = start; j <= end; j++) {
            trees[j] = 0;
        }
    }

    trees_to_move = 0;
    for (i = 0; i <= road_length; i++) {
        if (trees[i]) {
            trees_to_move++;
        }
    }

    printf("Result of number of trees needed to move: %d\n", trees_to_move);

    free(trees);

    return 0;
}

// question no.3
#include <stdio.h>

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    
    if (num % 3 == 0 && num % 5 == 0 && num % 7 == 0) {
        printf("the input us divisible by 3, 5, and 7.\n");
    } else if ((num % 3 == 0 && num % 5 == 0) || 
               (num % 3 == 0 && num % 7 == 0) || 
               (num % 5 == 0 && num % 7 == 0)) {
        if (num % 3 == 0 && num % 5 == 0) {
            printf("the input is divisible by 3 and 5.\n");
        } else if (num % 3 == 0 && num % 7 == 0) {
            printf("the input is divisible by 3 and 7.\n");
        } else {
            printf("the input is divisible by 5 and 7.\n");
        }
    } else if (num % 3 == 0) {
        printf("the input is divisible by 3.\n");
    } else if (num % 5 == 0) {
        printf("the input is divisible by 5.\n");
    } else if (num % 7 == 0) {
        printf("the input is divisible by 7.\n");
    } else {
        printf("the input is not divisible by 3, 5, or 7.\n");
    }
    
    return 0;
}

// question no.4
#include <stdio.h>

int main() {
    int b, d, t, h;
    
    printf("Enter the sizes of the four lakes (separated by spaces): ");
    scanf("%d %d %d %d", &b, &d, &t, &h);
    

    if (d > h && b > h && b > d && t > h) {
        printf("Student A is correct. The size sequence is: b > d > t > h\n");
    } else if (h > d && b > t && t > d && h > b) {
        printf("Student B is correct. The size sequence is: h > b > t > d\n");
    } else if (h < d && d > b && h > t && t > b) {
        printf("Student C is correct. The size sequence is: d > t > b > h\n");
    } else if (b > h && t < h && h > d && d > t) {
        printf("Student D is correct. The size sequence is: b > d > t > h\n");
    } else {
        printf("No one is correct.\n");
    }
    
    return 0;
}

// question no.5
#include <stdio.h>

int main() {
    int n;
    printf("Enter a number: ");
    scanf("%d", &n);
    
    printf("%d ", n);
    while (n != 1) {
        if (n % 2 == 0) {
            n = n / 2;
        } else {
            n = 3 * n + 1;
        }
        printf("%d ", n);
    }
    
    return 0;
}
