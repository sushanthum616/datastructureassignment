// question no 1
#include <stdio.h>

void removeDuplicateElements(int arr[], int n)
{
    // Create an empty array to store unique elements
    int uniqueList[n], k = 0;
    // Loop through the array
    for (int i = 0; i < n; i++)
    {
        int j;
        // Check if the element is already in the unique list
        for (j = 0; j < k; j++)
            if (arr[i] == uniqueList[j])
                break;
        // If not, add it to the unique list
        if (j == k)
            uniqueList[k++] = arr[i];
    }
    // Print the unique list
    printf("Results: ");
    for (int i = 0; i < k; i++)
        printf("%d ", uniqueList[i]);
}

int main()
{
    int size;
    printf("Enter size of array: ");
    scanf("%d", &size);
    int arr[size];
    printf("Enter each element for the given array: ");
    for (int i = 0; i < size; i++)
        scanf("%d", &arr[i]);
    removeDuplicateElements(arr, size);
    return 0;
}

//question no 2
#include <stdio.h>
#include <stdbool.h>

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d", arr[i]);
    }
    printf(" ");
}

bool contains(int arr[], int size, int value) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == value) {
            return true;
        }
    }
    return false;
}

void permute(int arr[], int size, int chosen[], int chosenSize) {
    if (chosenSize == size) {
        printArray(chosen, size);
        printf("\n");
    }
    else {
        for (int i = 0; i < size; i++) {
            if (!contains(chosen, chosenSize, arr[i])) {
                chosen[chosenSize] = arr[i];
                permute(arr, size, chosen, chosenSize+1);
            }
        }
    }
}

int main() {
    int n;
    printf("Enter size of array: ");
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) {
        printf("Enter element %d: ", i+1);
        scanf("%d", &arr[i]);
    }
    printf("All permutations:\n");
    int chosen[n];
    permute(arr, n, chosen, 0);
    return 0;
}

// question no 3
#include <stdio.h>

int main() {
    int n, num = 1, arr[10][10] = {{0}};
    printf("Enter the number of lines you want to print: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            arr[i][j] = num++;
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            printf("%d ", arr[i][j]);
        }
        printf("\n");
    }
    return 0;
}

}
// question no 4
#include <stdio.h>
#include <string.h>

#define MAX_SIZE 100

int main()
{
    char str1[MAX_SIZE], str2[MAX_SIZE];
    int len1, len2, i, j, found;

    printf("Enter the first string: ");
    fgets(str1, MAX_SIZE, stdin);
    str1[strcspn(str1, "\n")] = '\0'; // Remove the newline character

    printf("Enter the second string: ");
    fgets(str2, MAX_SIZE, stdin);
    str2[strcspn(str2, "\n")] = '\0'; // Remove the newline character

    len1 = strlen(str1);
    len2 = strlen(str2);

    if (len1 != len2) {
        printf("No\n");
        return 0;
    }

    for (i = 0; i < len1; i++) {
        found = 0;
        for (j = 0; j < len2; j++) {
            if (str1[i] == str2[j]) {
                found = 1;
                str2[j] = ' ';
                break;
            }
        }
        if (!found) {
            printf("result=No\n");
            return 0;
        }
    }

    printf("result=Yes\n");

    return 0;
}
// question no 5
#include <stdio.h>
#include <stdbool.h>

int main() {
    int size, i, j;
    printf("Enter size of array: ");
    scanf("%d", &size);
    int arr[size], freq[size];
    
    printf("Enter each element for the given array: ");
    for (i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
        freq[i] = 0; // set initial frequency to 0
    }

    for (i = 0; i < size; i++) {
        if (freq[i] == -1) { // skip counted elements
            continue;
        }
        int count = 1;
        for (j = i + 1; j < size; j++) {
            if (arr[i] == arr[j]) {
                count++;
                freq[j] = -1; // mark the element as counted
            }
        }
        freq[i] = count; // update frequency
    }

    printf("Frequency for each element: ");
    for (i = 0; i < size; i++) {
        if (freq[i] > 0) { // print only non-zero frequencies
            printf("%d-%d ", arr[i], freq[i]);
        }
    }

    return 0;
}

